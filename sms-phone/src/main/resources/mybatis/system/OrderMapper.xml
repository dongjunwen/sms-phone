<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system.dao.OrderDao">

	<select id="get" resultType="com.bootdo.system.domain.OrderDO">
		select `id`,`order_no`,`order_name`,`invalid_status`,`invalid_days`,`create_time`,`use_time`,`unvalid_time`,owner_user_id,use_user_id,invalid_type
		from bom_order where id = #{value}
	</select>
	<select id="selectByOrderNo" resultType="com.bootdo.system.domain.OrderDO" parameterType="java.lang.String">
		select `id`,`order_no`,`order_name`,`invalid_status`,`invalid_days`,`create_time`,`use_time`,`unvalid_time`,owner_user_id,use_user_id,invalid_type
		from bom_order
		where order_no = #{orderNo}
	</select>


	<select id="list" resultType="com.bootdo.system.domain.OrderDO">
		select a.id,`order_no`,`order_name`,`invalid_status`,`invalid_days`,`create_time`,`use_time`,`unvalid_time`,
        use_user_id,b.name as use_user_name,b.QQ as use_user_qq,invalid_type
		from bom_order a left join sys_user b on a.use_user_id=b.user_id
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="orderNo != null and orderNo != ''"> and order_no = #{orderNo} </if>
		  		  <if test="orderName != null and orderName != ''"> and order_name = #{orderName} </if>
		  		  <if test="invalidStatus != null and invalidStatus != ''"> and invalid_status = #{invalidStatus} </if>
		  		  <if test="invalidDays != null and invalidDays != ''"> and invalid_days = #{invalidDays} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="useTime != null and useTime != ''"> and use_time = #{useTime} </if>
		  		  <if test="unvalidTime != null and unvalidTime != ''"> and unvalid_time = #{unvalidTime} </if>
                  <if test="useUserId != null and useUserId != ''"> and use_user_id = #{useUserId} </if>
			      <if test="ifValid != null and ifValid != ''"> and unvalid_time &lt;= now(); </if>
				 <if test="ownerUserId != null and ownerUserId != ''"> and owner_user_id = #{ownerUserId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from bom_order
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="orderNo != null and orderNo != ''"> and order_no = #{orderNo} </if>
		  		  <if test="orderName != null and orderName != ''"> and order_name = #{orderName} </if>
		  		  <if test="invalidStatus != null and invalidStatus != ''"> and invalid_status = #{invalidStatus} </if>
		  		  <if test="invalidDays != null and invalidDays != ''"> and invalid_days = #{invalidDays} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="useTime != null and useTime != ''"> and use_time = #{useTime} </if>
		  		  <if test="unvalidTime != null and unvalidTime != ''"> and unvalid_time = #{unvalidTime} </if>
                   <if test="useUserId != null and useUserId != ''"> and use_user_id = #{useUserId} </if>
			 		<if test="ifValid != null and ifValid != ''"> and unvalid_time &lt;= now(); </if>
			 <if test="ownerUserId != null and ownerUserId != ''"> and owner_user_id = #{ownerUserId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.system.domain.OrderDO" useGeneratedKeys="true" keyProperty="id">
		insert into bom_order
		(
			`order_no`, 
			`order_name`, 
			`invalid_status`, 
			`invalid_days`, 
			`create_time`, 
			`use_time`, 
			`unvalid_time`,
            use_user_id,
            owner_user_id,
            invalid_type
		)
		values
		(
			#{orderNo}, 
			#{orderName}, 
			#{invalidStatus}, 
			#{invalidDays}, 
			#{createTime}, 
			#{useTime}, 
			#{unvalidTime},
			#{useUserId},
			#{ownerUserId},
			#{invalidType}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.system.domain.OrderDO">
		update bom_order 
		<set>
			<if test="orderNo != null">`order_no` = #{orderNo}, </if>
			<if test="orderName != null">`order_name` = #{orderName}, </if>
			<if test="invalidStatus != null">`invalid_status` = #{invalidStatus}, </if>
			<if test="invalidDays != null">`invalid_days` = #{invalidDays}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="useTime != null">`use_time` = #{useTime}, </if>
			<if test="unvalidTime != null">`unvalid_time` = #{unvalidTime},</if>
            <if test="useUserId != null">`use_user_id` = #{useUserId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from bom_order where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from bom_order where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<update id="batchDisable">
		update bom_order  set invalid_status='1' where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
		and invalid_status='0'
	</update>
	<update id="batchEnable">
		update bom_order  set invalid_status='0' where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
		and invalid_status='1'
	</update>

</mapper>