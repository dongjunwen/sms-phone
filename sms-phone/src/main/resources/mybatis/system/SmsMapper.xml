<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system.dao.SmsDao">

	<select id="get" resultType="com.bootdo.system.domain.SmsDO">
		select
		`id`,order_no,`phone_num`,success_num,`exec_status`,`exec_type`,user_id,create_time,modi_time
		 from bom_sms
		 where id = #{value}
	</select>

    <select id="countByIndex" parameterType="com.bootdo.system.domain.SmsDO" resultType="java.lang.Integer">
        select count(id)
        from bom_sms
         where
          1=1
          and order_no = #{orderNo}
          and phone_num = #{phoneNum}
    </select>

	<select id="countByOrderNo" parameterType="com.bootdo.system.domain.SmsDO" resultType="java.lang.Integer">
		select count(id)
		from bom_sms
		where
		1=1
		and order_no = #{orderNo}
	</select>


	<select id="selectByOrderNo" resultType="com.bootdo.system.domain.SmsDO" parameterType="java.lang.String">
		select
		a.id,a.order_no,a.phone_num,a.exec_status,b.name exec_status_name,a.success_num,a.exec_type,a.user_id,a.create_time,a.modi_time
		from bom_sms a
		join sys_dict b on a.exec_status =b.value and b.type='EXEC_STATUS'
		where order_no = #{orderNo}

	</select>
	<select id="list" resultType="com.bootdo.system.domain.SmsDO">
		select `id`,`phone_num`,`exec_status`,`exec_type` from bom_sms
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="phoneNum != null and phoneNum != ''"> and phone_num = #{phoneNum} </if>
		  		  <if test="execStatus != null and execStatus != ''"> and exec_status = #{execStatus} </if>
		  		  <if test="execType != null and execType != ''"> and exec_type = #{execType} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from bom_sms
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="phoneNum != null and phoneNum != ''"> and phone_num = #{phoneNum} </if>
		  		  <if test="execStatus != null and execStatus != ''"> and exec_status = #{execStatus} </if>
		  		  <if test="execType != null and execType != ''"> and exec_type = #{execType} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.system.domain.SmsDO" useGeneratedKeys="true" keyProperty="id">
		insert into bom_sms
		(
		    order_no,
			`phone_num`, 
			`exec_status`, 
			`exec_type`,
			user_id,
			create_time,
			modi_time
		)
		values
		(
		    #{orderNo},
			#{phoneNum}, 
			#{execStatus}, 
			#{execType},
			#{userId},
			#{createTime},
			#{modiTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.system.domain.SmsDO">
		update bom_sms 
		<set>
			<if test="phoneNum != null">`phone_num` = #{phoneNum}, </if>
			<if test="execStatus != null">`exec_status` = #{execStatus}, </if>
			<if test="execType != null">`exec_type` = #{execType}</if>
		</set>
		where id = #{id}
	</update>

	<update id="addNum" parameterType="com.bootdo.system.domain.SmsDO">
		update bom_sms
		 set success_num=success_num+1
		where phone_num = #{phoneNum}
		and order_no = #{orderNo}
	</update>
	
	<delete id="remove">
		delete from bom_sms where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from bom_sms where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="listAvailable" resultType="com.bootdo.system.domain.SmsDO">
		select a.order_no,a.phone_num
		from bom_sms a join bom_order b on a.order_no=b.order_no
		and b.unvalid_time &gt; now()
		and b.invalid_status='0'
		and a.exec_status='1'
	</select>



</mapper>